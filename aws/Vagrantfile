
def tags_from_environment(env)
  values = [env.fetch('BOSH_LITE_NAME', 'Vagrant')]
  values.concat env.fetch('BOSH_LITE_TAG_VALUES', '').chomp.split(', ')

  keys = ['Name']
  keys.concat env.fetch('BOSH_LITE_TAG_KEYS', '').chomp.split(', ')

  raise 'Please provide the same number of keys and values!' if keys.length != values.length

  Hash[keys.zip(values)]
end

Vagrant.configure('2') do |config|
  # better error messages from Hash.fetch
  env = ENV.to_hash

  config.vm.box = 'dummy'
  config.vm.box_url = 'https://github.com/mitchellh/vagrant-aws/blob/master/dummy.box?raw=true'
  config.vm.provider :aws do |aws, override|
    aws.access_key_id =       env.fetch('BOSH_AWS_ACCESS_KEY_ID')
    aws.secret_access_key =   env.fetch('BOSH_AWS_SECRET_ACCESS_KEY')

    aws.keypair_name =        env.fetch('BOSH_LITE_KEYPAIR', 'bosh')

    aws.ami = 'ami-8cb041e4'
    aws.block_device_mapping = [
        {
          :DeviceName => '/dev/sda1',
          'Ebs.VolumeSize' => env.fetch('BOSH_LITE_DISK_SIZE', '50').to_i
        }
    ]
    aws.instance_type =       env.fetch('BOSH_LITE_INSTANCE_TYPE', 'm3.xlarge')
    
    aws.tags =                tags_from_environment(env)
    # use SG-names when deploying to EC2 classic but SG-IDs when deploying to a VPC
    aws.security_groups = [   env.fetch('BOSH_LITE_SECURITY_GROUP', 'inception') ]

    aws.subnet_id =           env.fetch('BOSH_LITE_SUBNET_ID') if env.include?('BOSH_LITE_SUBNET_ID')

    override.ssh.username = 'ubuntu'
    override.ssh.private_key_path = env.fetch('BOSH_LITE_PRIVATE_KEY', '~/.ssh/id_rsa_bosh')
  end

  endpoint = env.include?('BOSH_LITE_SUBNET_ID') ? 'local-ipv4' : 'public-ipv4'

  PORT_FORWARDING = <<-IP_SCRIPT
ip=`curl -s http://169.254.169.254/latest/meta-data/#{endpoint}`
echo "The IP for this instance is $ip"
echo "You can bosh target $ip, or run vagrant ssh and then bosh target 127.0.0.1"
echo "Setting up port forwarding for the CF Cloud Controller..."
sudo iptables -t nat -A PREROUTING -p tcp -d $ip --dport 80 -j DNAT --to 10.244.0.34:80
sudo iptables -t nat -A PREROUTING -p tcp -d $ip --dport 443 -j DNAT --to 10.244.0.34:443
sudo iptables -t nat -A PREROUTING -p tcp -d $ip --dport 4443 -j DNAT --to 10.244.0.34:4443
IP_SCRIPT

  config.vm.provision :shell, :inline => PORT_FORWARDING

end